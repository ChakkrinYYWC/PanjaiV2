[{"C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\App.js":"2","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\pages\\Homepage.jsx":"4","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\pages\\Login.jsx":"5","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\pages\\register.jsx":"6","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\pages\\Too-panjai.jsx":"7","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\components\\Navbar\\Navbar.js":"8","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\components\\FileUpload.js":"9","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\components\\PostPanjai.js":"10","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\action\\store.js":"11","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\components\\Navbar\\Menuitems.js":"12","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\components\\Message.js":"13","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\components\\Progress.js":"14","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\action\\postPanjai.js":"15","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\components\\PostPanjaiForm.js":"16","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\action\\api.js":"17","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\reducers\\index.js":"18","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\components\\useForm.js":"19","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\reducers\\postPanjai.js":"20"},{"size":500,"mtime":499162500000,"results":"21","hashOfConfig":"22"},{"size":755,"mtime":1609231191605,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":580,"mtime":1609231370510,"results":"25","hashOfConfig":"22"},{"size":1565,"mtime":1609323749489,"results":"26","hashOfConfig":"22"},{"size":8572,"mtime":1609351159027,"results":"27","hashOfConfig":"22"},{"size":915,"mtime":1609179020830,"results":"28","hashOfConfig":"22"},{"size":2101,"mtime":1609342771333,"results":"29","hashOfConfig":"22"},{"size":1172,"mtime":1609347781331,"results":"30","hashOfConfig":"22"},{"size":5072,"mtime":1609179010010,"results":"31","hashOfConfig":"22"},{"size":248,"mtime":1609178999124,"results":"32","hashOfConfig":"22"},{"size":719,"mtime":1609342771330,"results":"33","hashOfConfig":"22"},{"size":515,"mtime":1609324202413,"results":"34","hashOfConfig":"22"},{"size":469,"mtime":1609324212231,"results":"35","hashOfConfig":"22"},{"size":1425,"mtime":1609178999085,"results":"36","hashOfConfig":"22"},{"size":5059,"mtime":1609179010056,"results":"37","hashOfConfig":"22"},{"size":468,"mtime":1609178999037,"results":"38","hashOfConfig":"22"},{"size":151,"mtime":1609179031297,"results":"39","hashOfConfig":"22"},{"size":702,"mtime":1609179010098,"results":"40","hashOfConfig":"22"},{"size":904,"mtime":1609179031356,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1svwk6s",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},"C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\index.js",[],["94","95"],"C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\App.js",["96","97"],"import './App.css';\r\n\r\nimport { BrowserRouter as Router, \r\n  Route, \r\n  Switch, \r\n  Link, \r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\n//pages\r\nimport Homepage from \"./pages/Homepage\";\r\nimport Login from \"./pages/Login\";\r\nimport Too_panjai from \"./pages/Too-panjai\";\r\nimport Navbar from \"./components/Navbar/Navbar\";  //forth\r\nimport register from \"./pages/register\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <Navbar></Navbar>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Homepage}/>\r\n        <Route exact path=\"/login\" component={Login}/>\r\n        <Route exact path=\"/register\" component={register}/>\r\n        <Route exact path=\"/Too_panjai\" component={Too_panjai}/>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\pages\\Homepage.jsx",["98","99","100","101","102","103"],"import Axios from 'axios';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport { BrowserRouter as Router, \r\n    Route, \r\n    Switch, \r\n    Link, \r\n    Redirect\r\n} from \"react-router-dom\";\r\n/*----------------------------------------------------------------------*/\r\nfunction Homepage() {\r\n    return (\r\n        <div>\r\n            <div>Welcome</div>\r\n            <Link to=\"/login\">Login</Link><br/>\r\n            <Link to=\"/register\">Register</Link><br/>\r\n            <Link to=\"/Too_panjai\">Too panjai</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage;","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\pages\\Login.jsx",[],"C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\pages\\register.jsx",["104","105","106","107","108","109"],"import Axios from 'axios';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport ButterToast, { Cinnamon } from \"butter-toast\";\r\nimport { DeleteSweep } from \"@material-ui/icons\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport FileUpload from \"../components/FileUpload\";\r\n\r\n\r\n\r\nfunction Register() {\r\n/*------------------------------------------------------------*/\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [CPassword, setCPassword] = useState(\"\");\r\n    const [file, setFile] = useState('');\r\n    const [filename, setFilename] = useState('Choose File');\r\n\r\n\r\n    const addUser = () => {\r\n        const fd = new FormData();\r\n        const image = file\r\n        fd.append('image',file, file.name);\r\n        console.log(fd)\r\n        Axios.post('http://localhost:3001/authenticate/register',{\r\n            username: username,\r\n            password: password,\r\n            CPassword: CPassword,\r\n            content: image\r\n        })\r\n    }\r\n\r\n    // const onPasswordIncorrect = () => {\r\n    //     window.confirm('Confirm password incorrect!')\r\n    //     // ButterToast.raise({\r\n    //     //     content: <Cinnamon.Crisp title=\"Register\"\r\n    //     //         content=\"Confirm password incorrect!!\"\r\n    //     //         scheme={Cinnamon.Crisp.SCHEME_PURPLE}\r\n    //     //         icon={<DeleteSweep />}\r\n    //     //     />\r\n    //     // })\r\n    // }\r\n\r\n    const onChange = e => {\r\n        setFile(e.target.files[0]);\r\n        setFilename(e.target.files[0].name);\r\n    };\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        console.log(file)\r\n        const res = await Axios.post('/register', formData, {\r\n        });\r\n    };\r\n\r\n\r\n    const onPasswordIncorrect = () => {\r\n        const onSuccess = () => {\r\n            ButterToast.raise({\r\n                content: <Cinnamon.Crisp title=\"ตู้ปันใจ\"\r\n                    content=\"Deleted successfully\"\r\n                    scheme={Cinnamon.Crisp.SCHEME_PURPLE}\r\n                    icon={<DeleteSweep />}\r\n                />\r\n            })\r\n        }\r\n    }\r\n\r\n    const Submit = () =>{\r\n        if (password !== CPassword){\r\n            window.alert('Confirm password incorrect!')\r\n            return <Redirect to=\"/register\"></Redirect>\r\n        }\r\n        else{\r\n            //window.alert('Welcome!')\r\n            addUser()\r\n        //     return(\r\n                \r\n        //     )\r\n        }\r\n    }\r\n/*-----------------------------------------------------------*/\r\n    return (\r\n        <div className=\"container\">\r\n        <h1>Register</h1>\r\n        <h6>Please register.</h6>\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <div>\r\n                    <label>Username:</label>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"Username\"\r\n                    placeholder=\"Enter name\"\r\n                    onChange={(event) =>{\r\n                        setUsername(event.target.value)\r\n                    }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Password:</label>\r\n                    <input\r\n                    type=\"password\"\r\n                    name=\"Password\"\r\n                    placeholder=\"Enter Password\"\r\n                    onChange={(event) =>{\r\n                        setPassword(event.target.value)\r\n                    }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Confirm password:</label>\r\n                    <input\r\n                    type=\"password\"\r\n                    name=\"CPassword\"\r\n                    placeholder=\"Enter Password\"\r\n                    onChange={(event) =>{\r\n                        setCPassword(event.target.value)\r\n                    }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type='file'\r\n                        id='customFile'\r\n                        onChange={onChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" onClick={Submit}>Register</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n// function App() {\r\n// /*-----------------------------------------------------------*/\r\n//   const [userList, setUserList] = useState([]);\r\n//   const getUsers = () =>{\r\n//     Axios.get('http://localhost:3001/user').then((response) =>{\r\n//       setUserList(response.data)\r\n//     });\r\n//   }\r\n// /*-----------------------------------------------------------*/\r\n//   const [username, setUsername] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [CPassword, setCPassword] = useState(\"\");\r\n\r\n//   const addUser = () => {\r\n//     Axios.post('http://localhost:3001/createUser',{\r\n//       username: username,\r\n//       password: password,\r\n//       CPassword: CPassword \r\n//     }).then(() => {\r\n//       setUserList([\r\n//         ...userList,\r\n//         {\r\n//           username: username,\r\n//           password: password,\r\n//           CPassword: CPassword \r\n//         }\r\n//       ])\r\n//     })\r\n//   }\r\n// /*-----------------------------------------------------------*/\r\n// const [newUsername, setNewUsername] = useState(\"\");\r\n\r\n// const updateUser = (id) => {\r\n//   Axios.put(\"http://localhost:3001/userUpdate\", { username: newUsername, id: id }).then((response) => {\r\n//       setUserList(\r\n//         userList.map((val) => {\r\n//           return val._id == id\r\n//             ? {\r\n//                 username: newUsername\r\n//               }\r\n//             : val;\r\n//         })\r\n//       );\r\n//     }\r\n//   );\r\n// };\r\n// /*-----------------------------------------------------------*/\r\n// const removeUser = (Pid) => {\r\n//   Axios.delete('http://localhost:3001/userRemove/'+Pid).then((response) => {\r\n//       console.log(Pid)\r\n//       setUserList(\r\n//         userList.filter((val) =>{\r\n//           return val._id != Pid;\r\n//         })\r\n//       );\r\n//     }\r\n//   );\r\n// };\r\n// /*-----------------------------------------------------------*/\r\n//   return (\r\n//     <div className=\"App1 container\">\r\n//       <h1>User information</h1>\r\n//       <div>\r\n//         <form>\r\n//           <div>\r\n//             <label>Username:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"Username\"\r\n//               placeholder=\"Enter name\"\r\n//               onChange={(event) =>{\r\n//                 setUsername(event.target.value)\r\n//               }}\r\n//               >\r\n//             </input>\r\n//           </div>\r\n//           <div>\r\n//             <label>Password:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"Password\"\r\n//               placeholder=\"Enter Password\"\r\n//               onChange={(event) =>{\r\n//                 setPassword(event.target.value)\r\n//               }}\r\n//               >\r\n//             </input>\r\n//           </div>\r\n//           <div>\r\n//             <label>Comfirm Password:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"CPassword\"\r\n//               placeholder=\"Comfirm Password\"\r\n//               onChange={(event) =>{\r\n//                 setCPassword(event.target.value)\r\n//               }}\r\n//               >\r\n//             </input>\r\n//           </div>\r\n//           <div>\r\n//             <button onClick={addUser}>Register</button>\r\n//           </div>\r\n//         </form>\r\n//         <div>\r\n//           <button onClick={getUsers}>Show Users</button>\r\n\r\n//           {userList.map((val, key) => {\r\n//             return(\r\n//               <div className=\"card\">\r\n//                 <p>Username: {val.username}</p>\r\n//                 <div>\r\n//                   <input type='text'\r\n//                     placeholder=\"New username\"\r\n//                     onChange={(event) => {\r\n//                       setNewUsername(event.target.value)\r\n//                     }}\r\n//                   >\r\n//                   </input>\r\n//                   <button onClick={() => {updateUser(val._id)}}>Update</button>\r\n//                   <button onClick={() => {removeUser(val._id)}}>Remove</button>\r\n//                 </div>\r\n//               </div>\r\n//             )\r\n//           })}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nexport default Register;","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\pages\\Too-panjai.jsx",["110","111"],"import Axios from 'axios';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { Provider } from \"react-redux\";\r\nimport PostPanjai from \"../components/PostPanjai\";\r\nimport { store } from \"../action/store\";\r\nimport { Container, AppBar, Typography } from \"@material-ui/core\";\r\nimport ButterToast, { POS_RIGHT, POS_TOP } from \"butter-toast\";\r\n\r\nfunction Too_panjai() {\r\n    return(\r\n        <Provider store={store}>\r\n            <Container maxWidth=\"lg\">\r\n            <AppBar position=\"static\" color=\"inherit\">\r\n                <Typography\r\n                variant=\"h2\"\r\n                align=\"center\">\r\n                ตู้ปันใจ\r\n                </Typography>\r\n            </AppBar>\r\n            <PostPanjai />\r\n            <ButterToast position={{ vertical: POS_TOP, horizontal: POS_RIGHT }} />\r\n            </Container>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default Too_panjai;","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\components\\Navbar\\Navbar.js",["112","113"],"import { Search } from '@material-ui/icons';\r\nimport React, { Component } from 'react';\r\nimport Menuitems from \"./Menuitems\"\r\nimport './Navbar.css'\r\n\r\n\r\nclass Navbar extends Component {\r\n    state = { clicked: false }\r\n\r\n    handleClick = () => {\r\n        this.setState({ clicked: !this.state.clicked })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div> <nav className=\"NavbarItems\">\r\n                <h1 className=\"navbar-logo\">ปันใจ <i class=\"fab fa-gratipay\"></i></h1>\r\n                <div className=\"menu-icon\" onClick={this.handleClick}>\r\n                    <i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\r\n                </div>\r\n                <ul className={this.state.clicked ? 'nav-menu active' : 'nav-menu'}>\r\n                    {Menuitems.map((item, index) => {\r\n                        return (\r\n                            <li className=\"itemlist\">\r\n                                <a className={item.cName} href={item.url}>\r\n                                    {item.title}\r\n                                </a>\r\n\r\n                            </li>\r\n\r\n                        )\r\n                    })}\r\n\r\n                    <li className=\"itemlist\">\r\n                        <a href=\"\" className=\"hidden\">สมัครสมาชิก</a>\r\n                    </li>\r\n                </ul>\r\n\r\n                <span class=\"dropdown position-search\">\r\n                    <span type=\"button\" data-toggle=\"dropdown\"><i class=\"fas fa-search\"></i></span>\r\n                    <div class=\"dropdown-menu dropdown-menu-right\">\r\n                        <input type=\"Search\" placeholder=\"ค้นหา...\"></input>\r\n                    </div>\r\n                </span>\r\n                <span class=\"noti\">\r\n                    <span type=\"button\" href=\"\" className=\"bell\"><i class=\"fas fa-bell\"></i></span>\r\n                </span>\r\n                <div type=\"button\" href=\"\" className=\"nav-links-mobile\">สมัครสมาชิก</div>\r\n\r\n            </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Navbar","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\components\\FileUpload.js",["114","115","116","117","118","119"],"import React, { Fragment, useState } from 'react';\r\nimport Message from './Message';\r\nimport Progress from './Progress';\r\nimport axios from 'axios';\r\n\r\nconst FileUpload = () => {\r\n  const [file, setFile] = useState('');\r\n  const [filename, setFilename] = useState('Choose File');\r\n  const [uploadedFile, setUploadedFile] = useState({});\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n  const onChange = e => {\r\n    setFile(e.target.files[0]);\r\n    setFilename(e.target.files[0].name);\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    const res = await axios.post('/register', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n    const { fileName, filePath } = res.data;\r\n    setUploadedFile({ fileName, filePath });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          <input\r\n            type='file'\r\n            id='customFile'\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FileUpload;","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\components\\PostPanjai.js",["120","121","122"],"import React, { useEffect, useState, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../action/postPanjai'\r\nimport { Divider, Grid, Paper, Typography, withStyles, List, ListItem, ListItemText, Button } from '@material-ui/core';\r\nimport PostPanjaiFrom from './PostPanjaiForm';\r\nimport ButterToast, { Cinnamon } from \"butter-toast\";\r\nimport { DeleteSweep } from \"@material-ui/icons\";\r\nimport moment from 'moment';\r\nimport {Img} from 'react-image';\r\n\r\nconst styles = theme => ({\r\n    paper: {\r\n        margin: theme.spacing(3),\r\n        padding: theme.spacing(2)\r\n    },\r\n    smMargin: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    actionDiv: {\r\n        textAlign: \"center\"\r\n    }\r\n})\r\n\r\nconst PostPanjai = ({ classes, ...props }) => {\r\n\r\n    const [currentId, setCurrentId] = useState(0)\r\n\r\n    useEffect(() => {\r\n        props.fetchAllPostPanjai()\r\n    }, [])\r\n\r\n    const onDelete = id => {\r\n        const onSuccess = () => {\r\n            ButterToast.raise({\r\n                content: <Cinnamon.Crisp title=\"ตู้ปันใจ\"\r\n                    content=\"Deleted successfully\"\r\n                    scheme={Cinnamon.Crisp.SCHEME_PURPLE}\r\n                    icon={<DeleteSweep />}\r\n                />\r\n            })\r\n        }\r\n        if (window.confirm('ต้องการลบโพสนี้ใช่หรือไม่?'))\r\n            props.deletePostMessage(id, onSuccess)\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={5}>\r\n                <Paper className={classes.paper}>\r\n                    <PostPanjaiFrom {...{ currentId, setCurrentId }} />\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n                <Paper className={classes.paper}>\r\n                    <List>\r\n                        {\r\n                            props.postPanjaiList.map((record, index) => {\r\n                                return (\r\n                                    <Fragment key={index}>\r\n                                        <ListItem>\r\n                                            <ListItemText>\r\n                                                <Typography variant='h5'>\r\n                                                    {record.title}\r\n                                                </Typography>\r\n                                                <div>\r\n                                                    ข้อมูล : {record.message}\r\n                                                </div>\r\n                                                <div>\r\n                                                    <img src={record.image}/>\r\n                                                </div>\r\n                                                <div>\r\n                                                    เวลาที่ลง : {moment(record.Timestamp).calendar()}                              \r\n                                                </div>\r\n                                                <div>\r\n                                                    โทร : {record.contect}\r\n                                                </div>\r\n                                                <div>\r\n                                                    {record.location}\r\n                                                </div>\r\n                                                <div className={classes.actionDiv}>\r\n                                                    <Button variant=\"contained\" color=\"primary\" size=\"small\"\r\n                                                        className={classes.smMargin}\r\n                                                        onClick={() => setCurrentId(record._id)}>\r\n                                                        แก้ไข\r\n                                                    </Button>\r\n                                                    <Button variant=\"contained\" color=\"secondary\" size=\"small\"\r\n                                                        className={classes.smMargin}\r\n                                                        onClick={() => onDelete(record._id)}>\r\n                                                        ลบ\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </ListItemText>\r\n                                        </ListItem>\r\n                                        <Divider component='li' />\r\n                                    </Fragment>\r\n                                )\r\n                            })\r\n                        }\r\n                    </List>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    postPanjaiList: state.postPanjai.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    fetchAllPostPanjai: action.fetchAll,\r\n    deletePostMessage: action.Delete\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(PostPanjai));","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\action\\store.js",[],"C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\components\\Navbar\\Menuitems.js",[],"C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\components\\Message.js",[],"C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\components\\Progress.js",[],"C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\action\\postPanjai.js",[],"C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\components\\PostPanjaiForm.js",["123","124","125","126","127","128"],"import React, { useEffect, useState } from \"react\";\r\nimport { TextField, withStyles, Button } from \"@material-ui/core\";\r\nimport useForm from \"./useForm\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../action/postPanjai\";\r\nimport ButterToast, { Cinnamon } from \"butter-toast\";\r\nimport { AssignmentTurnedIn } from \"@material-ui/icons\";\r\n\r\nconst initialFieldValues = {\r\n    title: '',\r\n    message: '',\r\n    contect: '',\r\n    location: '',\r\n    image:''\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1)\r\n        },\r\n    },\r\n    form: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center'\r\n    },\r\n    postBtn: {\r\n        width: \"50%\"\r\n    }\r\n})\r\n\r\nconst PostPanjaiForm = ({ classes, ...props }) => {\r\n\r\n    useEffect(() => {\r\n        if (props.currentId != 0) {\r\n            setValues({\r\n                ...props.postPanjaiList.find(x => x._id == props.currentId)\r\n            })\r\n            setErrors({})\r\n        }\r\n    }, [props.currentId])\r\n\r\n    const validate = () => {\r\n        let temp = { ...errors }\r\n        temp.title = values.title ? \"\" : \"กรุณาใส่ข้อมูล.\"\r\n        temp.message = values.message ? \"\" : \"กรุณาใส่ข้อมูล.\"\r\n        temp.contect = values.contect ? \"\" : \"กรุณาใส่ข้อมูล.\"\r\n        temp.location = values.location ? \"\" : \"กรุณาใส่ข้อมูล.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    var {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFieldValues, props.setCurrentId)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        const onSuccess = () => {\r\n            ButterToast.raise({\r\n                content: <Cinnamon.Crisp title=\"ตู้ปันใจ\"\r\n                    content=\"Submitted successfully\"\r\n                    scheme={Cinnamon.Crisp.SCHEME_PURPLE}\r\n                    icon={<AssignmentTurnedIn />}\r\n                />\r\n            })\r\n            resetForm()\r\n        }\r\n        if (validate()) {\r\n            if (props.currentId == 0)\r\n                props.createPostPanjai(values, onSuccess)\r\n            else\r\n                props.updatePostPanjai(props.currentId, values, onSuccess)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`}\r\n            onSubmit={handleSubmit}>\r\n            <div className='form-group'>\r\n                <input\r\n                    className='form-input bg-light'\r\n                    name='image'\r\n                    type='file'\r\n                    value={values.image}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </div>\r\n            <TextField\r\n                name=\"title\"\r\n                variant=\"outlined\"\r\n                label=\"ชื่อ\"\r\n                fullWidth\r\n                value={values.title}\r\n                onChange={handleInputChange}\r\n                {...(errors.title && { error: true, helperText: errors.title })}\r\n            />\r\n            <TextField\r\n                name=\"message\"\r\n                variant=\"outlined\"\r\n                label=\"ข้อมูล\"\r\n                fullWidth\r\n                multiline\r\n                rows={4}\r\n                value={values.message}\r\n                onChange={handleInputChange}\r\n                {...(errors.message && { error: true, helperText: errors.message })}\r\n            />\r\n            <TextField\r\n                name=\"contect\"\r\n                variant=\"outlined\"\r\n                label=\"เบอร์โทรศัพท์\"\r\n                fullWidth\r\n                multiline\r\n                value={values.contect}\r\n                onChange={handleInputChange}\r\n                {...(errors.contect && { error: true, helperText: errors.contect })}\r\n            />\r\n            <TextField\r\n                name=\"location\"\r\n                variant=\"outlined\"\r\n                label=\"ใส่ชื่อจังหวัด\"\r\n                fullWidth\r\n                multiline\r\n                value={values.location}\r\n                onChange={handleInputChange}\r\n                {...(errors.location && { error: true, helperText: errors.location })}\r\n            />\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                className={classes.postBtn}\r\n            >โพสต์</Button>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    postPanjaiList: state.postPanjai.list\r\n})\r\n\r\nconst mapActionToProps = {\r\n    createPostPanjai: actions.create,\r\n    updatePostPanjai: actions.update\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapActionToProps)(withStyles(styles)(PostPanjaiForm));","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\action\\api.js",["129"],"import axios from \"axios\";\r\n\r\nconst baseUrl = 'http://localhost:3001/'\r\n\r\nexport default {\r\n    postPanjai(url = baseUrl + 'Too-Panjai/') {\r\n        return {\r\n            fetchAll: () => axios.get(url),\r\n            fetchById: id => axios.get(url + id),\r\n            create: newRecord => axios.post(url, newRecord),\r\n            update: (id, updatedRecord) => axios.put(url + id, updatedRecord),\r\n            delete: id => axios.delete(url + id)\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\reducers\\index.js",[],"C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\components\\useForm.js",["130","131"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst useForm = (initialFieldValues, setCurrentId) => {\r\n\r\n    const [values, setValues] = useState(initialFieldValues)\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const handleInputChange = e => {\r\n        const { name, value } = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n\r\n    const resetForm = () => {\r\n        setValues(initialFieldValues)\r\n        setErrors({})\r\n        setCurrentId(0)\r\n    }\r\n\r\n    return {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm,\r\n    };\r\n}\r\n\r\nexport default useForm;\r\n\r\n","C:\\Users\\user\\Desktop\\PanjaiV-2\\client\\src\\reducers\\postPanjai.js",["132","133"],"import { ACTION_TYPES } from '../action/postPanjai'\r\nconst initialState = {\r\n    list: []\r\n}\r\n\r\nexport const postPanjai = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ACTION_TYPES.FETCH_ALL:\r\n            return {\r\n                ...state,\r\n                list: [...action.payload]\r\n            }\r\n        case ACTION_TYPES.CREATE:\r\n            return {\r\n                ...state,\r\n                list: [...state.list, action.payload]\r\n            }\r\n        case ACTION_TYPES.UPDATE:\r\n            return {\r\n                ...state,\r\n                list: state.list.map(x => x._id == action.payload._id ? action.payload : x)\r\n            }\r\n\r\n        case ACTION_TYPES.DELETE:\r\n            return {\r\n                ...state,\r\n                list:state.list.filter(x => x._id != action.payload)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":6,"column":3,"nodeType":"140","messageId":"141","endLine":6,"endColumn":7},{"ruleId":"138","severity":1,"message":"142","line":7,"column":3,"nodeType":"140","messageId":"141","endLine":7,"endColumn":11},{"ruleId":"138","severity":1,"message":"143","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"144","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":18},{"ruleId":"138","severity":1,"message":"145","line":5,"column":27,"nodeType":"140","messageId":"141","endLine":5,"endColumn":33},{"ruleId":"138","severity":1,"message":"146","line":6,"column":5,"nodeType":"140","messageId":"141","endLine":6,"endColumn":10},{"ruleId":"138","severity":1,"message":"147","line":7,"column":5,"nodeType":"140","messageId":"141","endLine":7,"endColumn":11},{"ruleId":"138","severity":1,"message":"142","line":9,"column":5,"nodeType":"140","messageId":"141","endLine":9,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":6,"column":10,"nodeType":"140","messageId":"141","endLine":6,"endColumn":14},{"ruleId":"138","severity":1,"message":"148","line":7,"column":8,"nodeType":"140","messageId":"141","endLine":7,"endColumn":18},{"ruleId":"138","severity":1,"message":"149","line":17,"column":12,"nodeType":"140","messageId":"141","endLine":17,"endColumn":20},{"ruleId":"138","severity":1,"message":"150","line":54,"column":15,"nodeType":"140","messageId":"141","endLine":54,"endColumn":18},{"ruleId":"138","severity":1,"message":"151","line":59,"column":11,"nodeType":"140","messageId":"141","endLine":59,"endColumn":30},{"ruleId":"138","severity":1,"message":"152","line":60,"column":15,"nodeType":"140","messageId":"141","endLine":60,"endColumn":24},{"ruleId":"138","severity":1,"message":"143","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"144","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":18},{"ruleId":"138","severity":1,"message":"153","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":16},{"ruleId":"154","severity":1,"message":"155","line":36,"column":25,"nodeType":"156","endLine":36,"endColumn":55},{"ruleId":"138","severity":1,"message":"157","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":15},{"ruleId":"138","severity":1,"message":"158","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":16},{"ruleId":"138","severity":1,"message":"149","line":8,"column":10,"nodeType":"140","messageId":"141","endLine":8,"endColumn":18},{"ruleId":"138","severity":1,"message":"159","line":9,"column":10,"nodeType":"140","messageId":"141","endLine":9,"endColumn":22},{"ruleId":"138","severity":1,"message":"160","line":10,"column":10,"nodeType":"140","messageId":"141","endLine":10,"endColumn":26},{"ruleId":"138","severity":1,"message":"161","line":10,"column":28,"nodeType":"140","messageId":"141","endLine":10,"endColumn":47},{"ruleId":"138","severity":1,"message":"162","line":9,"column":9,"nodeType":"140","messageId":"141","endLine":9,"endColumn":12},{"ruleId":"163","severity":1,"message":"164","line":30,"column":8,"nodeType":"165","endLine":30,"endColumn":10,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":70,"column":53,"nodeType":"156","endLine":70,"endColumn":78},{"ruleId":"138","severity":1,"message":"144","line":1,"column":28,"nodeType":"140","messageId":"141","endLine":1,"endColumn":36},{"ruleId":"169","severity":1,"message":"170","line":36,"column":29,"nodeType":"171","messageId":"172","endLine":36,"endColumn":31},{"ruleId":"169","severity":1,"message":"173","line":38,"column":57,"nodeType":"171","messageId":"172","endLine":38,"endColumn":59},{"ruleId":"163","severity":1,"message":"174","line":42,"column":8,"nodeType":"165","endLine":42,"endColumn":25,"suggestions":"175"},{"ruleId":"169","severity":1,"message":"173","line":53,"column":49,"nodeType":"171","messageId":"172","endLine":53,"endColumn":51},{"ruleId":"169","severity":1,"message":"173","line":78,"column":33,"nodeType":"171","messageId":"172","endLine":78,"endColumn":35},{"ruleId":"176","severity":1,"message":"177","line":5,"column":1,"nodeType":"178","endLine":15,"endColumn":2},{"ruleId":"138","severity":1,"message":"179","line":1,"column":8,"nodeType":"140","messageId":"141","endLine":1,"endColumn":13},{"ruleId":"138","severity":1,"message":"180","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"169","severity":1,"message":"173","line":21,"column":49,"nodeType":"171","messageId":"172","endLine":21,"endColumn":51},{"ruleId":"169","severity":1,"message":"170","line":27,"column":51,"nodeType":"171","messageId":"172","endLine":27,"endColumn":53},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Axios' is defined but never used.","'useState' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'FileUpload' is defined but never used.","'filename' is assigned a value but never used.","'res' is assigned a value but never used.","'onPasswordIncorrect' is assigned a value but never used.","'onSuccess' is assigned a value but never used.","'Search' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Message' is defined but never used.","'Progress' is defined but never used.","'uploadedFile' is assigned a value but never used.","'uploadPercentage' is assigned a value but never used.","'setUploadPercentage' is assigned a value but never used.","'Img' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["183"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'props.postPanjaiList', 'setErrors', and 'setValues'. Either include them or remove the dependency array.",["184"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'React' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [props]",{"range":"189","text":"190"},"Update the dependencies array to be: [props.currentId, props.postPanjaiList, setErrors, setValues]",{"range":"191","text":"192"},[901,903],"[props]",[1051,1068],"[props.currentId, props.postPanjaiList, setErrors, setValues]"]